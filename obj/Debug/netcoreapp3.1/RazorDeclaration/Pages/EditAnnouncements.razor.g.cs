// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace SQL_Connection.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "C:\Users\lhotchkiss\source\repos\SQL-Connection\Sql-connection-master\Sql-connection-master\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\lhotchkiss\source\repos\SQL-Connection\Sql-connection-master\Sql-connection-master\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\lhotchkiss\source\repos\SQL-Connection\Sql-connection-master\Sql-connection-master\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\lhotchkiss\source\repos\SQL-Connection\Sql-connection-master\Sql-connection-master\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\lhotchkiss\source\repos\SQL-Connection\Sql-connection-master\Sql-connection-master\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\lhotchkiss\source\repos\SQL-Connection\Sql-connection-master\Sql-connection-master\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\lhotchkiss\source\repos\SQL-Connection\Sql-connection-master\Sql-connection-master\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\lhotchkiss\source\repos\SQL-Connection\Sql-connection-master\Sql-connection-master\_Imports.razor"
using SQL_Connection;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\lhotchkiss\source\repos\SQL-Connection\Sql-connection-master\Sql-connection-master\_Imports.razor"
using SQL_Connection.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\lhotchkiss\source\repos\SQL-Connection\Sql-connection-master\Sql-connection-master\Pages\EditAnnouncements.razor"
using System.IO;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\lhotchkiss\source\repos\SQL-Connection\Sql-connection-master\Sql-connection-master\Pages\EditAnnouncements.razor"
using BlazorInputFile;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\lhotchkiss\source\repos\SQL-Connection\Sql-connection-master\Sql-connection-master\Pages\EditAnnouncements.razor"
using System.ComponentModel;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\lhotchkiss\source\repos\SQL-Connection\Sql-connection-master\Sql-connection-master\Pages\EditAnnouncements.razor"
using Newtonsoft.Json;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/edit_announcements")]
    public partial class EditAnnouncements : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 52 "C:\Users\lhotchkiss\source\repos\SQL-Connection\Sql-connection-master\Sql-connection-master\Pages\EditAnnouncements.razor"
       
    private class Foo
    {
        public DateTime expires { get; set; } = DateTime.Now;
    }
    Foo bar = new Foo();
    MemoryStream ms;
    string filename;
    public string status = "";
    private static string expireJsonFile = "Data/announce_expire.json";
    private Dictionary<String, DateTime> slides;
    private int count = 0;

    async void Handle_Selection(IFileListEntry[] files)
    {
        try
        {
            var file = files.FirstOrDefault();
            ms = new MemoryStream();
            if (file != null)
            {
                filename = file.Name;
                await file.Data.CopyToAsync(ms);
            }
            else
            {
                await JSRuntime.InvokeVoidAsync("alert", "Error loading file!");
            }
        }
        catch (Exception e)
        {
            await JSRuntime.InvokeVoidAsync("alert", $"Error loading file!\n{e}");
        }
    }

    async void SaveCurrentFile()
    {
        try
        {
            using (FileStream fs = File.Create($"wwwroot/AnnouncementSlides/{filename}"))
            {
                ms.WriteTo(fs);
            }
            Dictionary<String, DateTime> items = loadSlides();

            items.Add(filename, bar.expires);
            using (StreamWriter file = File.CreateText(expireJsonFile))
            {
                String json = JsonConvert.SerializeObject(items);
                file.Write(json);
            }

            await JSRuntime.InvokeVoidAsync("alert", $"{filename} saved!");
        }
        catch (System.NullReferenceException)
        {
            await JSRuntime.InvokeVoidAsync("alert", "No file found to save!");
        }
        catch (System.IO.IOException e)
        {
            await JSRuntime.InvokeVoidAsync("alert", $"Error saving file!\n{e.Message}");
        }
    }

    private Dictionary<String, DateTime> loadSlides()
    {
        // read in the json file
        Dictionary<String, DateTime> items;
        using (StreamReader r = new StreamReader(expireJsonFile))
        {
            string json = r.ReadToEnd();
            items = JsonConvert.DeserializeObject<Dictionary<String, DateTime>>(json); // The json should be {"file_name":expiredate,}
        }
        slides = items;
        return items;
    }

    private List<String> sortDictKeys(Dictionary<String, DateTime> dict)
    {
        List<String> all_strs = dict.Keys.ToList();
        all_strs.Sort((a, b) => ((dict[a] - DateTime.Today).Days - (dict[b] - DateTime.Today).Days));
        return all_strs;
    }

    async void removeSlide(int index)
    {
        try
        {
            Dictionary<String, DateTime> current = loadSlides();
            string remove = sortDictKeys(current)[index];
            File.Delete("wwwroot/AnnouncementSlides/" + remove);
            current.Remove(remove);
            using (StreamWriter file = File.CreateText(expireJsonFile))
            {
                String json = JsonConvert.SerializeObject(current);
                file.Write(json);
            }
            await JSRuntime.InvokeVoidAsync("alert", "Announcement removed successfully!");
        }
        catch (Exception e)
        {
            await JSRuntime.InvokeVoidAsync("alert", $"Error saving file!\n{e.Message}");
        }
    }

    async void removeOld()
    {
        List<string> files = sortDictKeys(slides);
        for (int i = files.Count - 1; i >= 0; i--)
        {
            if (slides[files[i]] < DateTime.Now)
            {
                removeSlide(i);
            }
        }
    }

#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IJSRuntime JSRuntime { get; set; }
    }
}
#pragma warning restore 1591
